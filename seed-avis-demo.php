<?php
/**
 * Script d'insertion d'avis de d√©monstration sur PostgreSQL Render
 * URL: https://ecoride-om7c.onrender.com/seed-avis-demo.php
 */

require_once 'config/init.php';

header('Content-Type: text/html; charset=utf-8');

$confirm = isset($_GET['confirm']) && $_GET['confirm'] === 'yes';

echo "<h1>üå± Insertion d'avis de d√©monstration</h1>";
echo "<style>
    body { font-family: monospace; padding: 20px; background: #f5f5f5; }
    pre { background: white; padding: 15px; border-radius: 8px; border: 1px solid #ddd; }
    .success { color: #27ae60; font-weight: bold; }
    .error { color: #e74c3c; font-weight: bold; }
    .info { color: #3498db; font-weight: bold; }
    .btn { padding: 10px 20px; margin: 5px; border: none; border-radius: 5px; cursor: pointer; font-size: 16px; }
    .btn-primary { background: #3498db; color: white; }
    .btn-primary:hover { background: #2980b9; }
    .btn-cancel { background: #95a5a6; color: white; }
    .btn-cancel:hover { background: #7f8c8d; }
</style>";

if (!$confirm) {
    echo "<div style='background: #e8f4f8; border: 2px solid #3498db; padding: 20px; border-radius: 8px; margin: 20px 0;'>";
    echo "<h2>‚ÑπÔ∏è Cr√©ation d'avis de d√©monstration</h2>";
    echo "<p>Ce script va cr√©er environ <strong>10-15 avis de test</strong> entre les utilisateurs existants.</p>";
    echo "<p><strong>Conditions requises :</strong></p>";
    echo "<ul>";
    echo "<li>‚úÖ Au moins 3 utilisateurs dans la base</li>";
    echo "<li>‚úÖ Au moins 5 trajets (covoiturage) termin√©s</li>";
    echo "<li>‚úÖ Table 'avis' vide ou avec peu d'avis</li>";
    echo "</ul>";
    echo "<p><strong>Avis qui seront cr√©√©s :</strong></p>";
    echo "<ul>";
    echo "<li>Notes vari√©es : de 3 √† 5 √©toiles</li>";
    echo "<li>Commentaires r√©alistes en fran√ßais</li>";
    echo "<li>Dates √©chelonn√©es (derniers 30 jours)</li>";
    echo "</ul>";
    echo "<p>Voulez-vous continuer ?</p>";
    echo "<form method='get'>";
    echo "<input type='hidden' name='confirm' value='yes'>";
    echo "<button type='submit' class='btn btn-primary'>üå± Cr√©er les avis de d√©mo</button>";
    echo "<a href='/user/dashboard.php'><button type='button' class='btn btn-cancel'>‚ùå Annuler</button></a>";
    echo "</form>";
    echo "</div>";
    exit;
}

echo "<pre>";

try {
    $pdo = db();
    $driver = $pdo->getAttribute(PDO::ATTR_DRIVER_NAME);

    echo "‚úÖ Connexion √©tablie (Driver: $driver)\n\n";

    if ($driver !== 'pgsql') {
        die("<span class='error'>‚ùå Ce script est uniquement pour PostgreSQL (Render)</span>");
    }

    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n";
    echo "üîç V√âRIFICATION DES DONN√âES\n";
    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n";

    // Compter les utilisateurs
    $stmt = $pdo->query("SELECT COUNT(*) FROM utilisateur");
    $userCount = $stmt->fetchColumn();
    echo "üë• Utilisateurs: $userCount\n";

    if ($userCount < 3) {
        die("<span class='error'>‚ùå Il faut au moins 3 utilisateurs pour cr√©er des avis</span>");
    }

    // Compter les trajets
    $stmt = $pdo->query("SELECT COUNT(*) FROM covoiturage");
    $tripCount = $stmt->fetchColumn();
    echo "üöó Trajets: $tripCount\n";

    if ($tripCount < 3) {
        die("<span class='error'>‚ùå Il faut au moins 3 trajets pour cr√©er des avis</span>");
    }

    // Compter les avis existants
    $stmt = $pdo->query("SELECT COUNT(*) FROM avis");
    $existingAvis = $stmt->fetchColumn();
    echo "‚≠ê Avis existants: $existingAvis\n\n";

    // R√©cup√©rer quelques utilisateurs
    $stmt = $pdo->query("SELECT utilisateur_id, pseudo FROM utilisateur ORDER BY utilisateur_id LIMIT 10");
    $users = $stmt->fetchAll(PDO::FETCH_ASSOC);

    // R√©cup√©rer quelques trajets
    $stmt = $pdo->query("
        SELECT covoiturage_id, id_conducteur as conducteur_id, ville_depart, ville_arrivee
        FROM covoiturage
        ORDER BY covoiturage_id
        LIMIT 10
    ");
    $trips = $stmt->fetchAll(PDO::FETCH_ASSOC);

    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n";
    echo "üå± CR√âATION DES AVIS\n";
    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n";

    // Commentaires de d√©monstration
    $commentaires = [
        [5, "Excellent conducteur ! Tr√®s ponctuel et sympathique. Trajet agr√©able et s√©curitaire."],
        [5, "Parfait ! Voiture propre, conduite souple. Je recommande vivement ce covoitureur."],
        [4, "Tr√®s bon trajet. Conducteur aimable et respectueux. Quelques petits retards mais rien de grave."],
        [4, "Bonne exp√©rience globale. Conversation agr√©able pendant le trajet."],
        [5, "Top ! Conducteur professionnel, √† l'heure et courtois. Je referai volontiers un trajet avec lui."],
        [3, "Trajet correct mais conducteur un peu press√©. Conduite un peu sportive √† mon go√ªt."],
        [4, "Bien dans l'ensemble. V√©hicule confortable et trajet dans les temps."],
        [5, "Excellente exp√©rience ! Musique au top et ambiance d√©tendue. Merci !"],
        [4, "Conducteur sympathique et ponctuel. Petit b√©mol sur la propret√© du v√©hicule mais rien de grave."],
        [5, "Parfait de A √† Z ! Communication facile, horaires respect√©s, conduite s√©curitaire. 5 √©toiles m√©rit√©es !"],
        [4, "Tr√®s satisfait du trajet. Conducteur discret et respectueux."],
        [5, "Super exp√©rience ! Le conducteur est tr√®s arrangeant et la voiture est impeccable."],
        [3, "Trajet acceptable mais conducteur pas tr√®s bavard. On est bien arriv√© c'est le principal."],
        [4, "Bon covoiturage. Rien √† redire sur la ponctualit√© et le trajet."],
        [5, "Excellent ! Je recommande ce conducteur les yeux ferm√©s. Tr√®s professionnel."]
    ];

    $inserted = 0;
    $skipped = 0;

    // Cr√©er des avis
    foreach ($trips as $index => $trip) {
        if ($inserted >= 15) break;

        // S√©lectionner un √©valuateur diff√©rent du conducteur
        $evaluateur = null;
        foreach ($users as $user) {
            if ($user['utilisateur_id'] != $trip['conducteur_id']) {
                $evaluateur = $user;
                break;
            }
        }

        if (!$evaluateur) {
            $skipped++;
            continue;
        }

        // V√©rifier si l'avis n'existe pas d√©j√†
        $stmt = $pdo->prepare("
            SELECT COUNT(*) FROM avis
            WHERE evaluateur_id = :eval AND evalue_id = :evalu AND covoiturage_id = :trip
        ");
        $stmt->execute([
            'eval' => $evaluateur['utilisateur_id'],
            'evalu' => $trip['conducteur_id'],
            'trip' => $trip['covoiturage_id']
        ]);

        if ($stmt->fetchColumn() > 0) {
            $skipped++;
            continue;
        }

        // S√©lectionner un commentaire al√©atoire
        $comment = $commentaires[array_rand($commentaires)];
        $note = $comment[0];
        $commentaire = $comment[1];

        // Date al√©atoire dans les 30 derniers jours
        $daysAgo = rand(1, 30);
        $created_at = date('Y-m-d H:i:s', strtotime("-$daysAgo days"));

        // Ins√©rer l'avis
        try {
            $stmt = $pdo->prepare("
                INSERT INTO avis (evaluateur_id, evalue_id, covoiturage_id, note, commentaire, created_at)
                VALUES (:evaluateur, :evalue, :covoiturage, :note, :commentaire, :created_at)
            ");
            $stmt->execute([
                'evaluateur' => $evaluateur['utilisateur_id'],
                'evalue' => $trip['conducteur_id'],
                'covoiturage' => $trip['covoiturage_id'],
                'note' => $note,
                'commentaire' => $commentaire,
                'created_at' => $created_at
            ]);

            $inserted++;
            echo "‚úÖ Avis #{$inserted}: {$evaluateur['pseudo']} ‚Üí Conducteur (Note: {$note}/5)\n";
            echo "   Trajet: {$trip['ville_depart']} ‚Üí {$trip['ville_arrivee']}\n";
            echo "   \"{$commentaire}\"\n\n";

        } catch (PDOException $e) {
            $skipped++;
            echo "‚ö†Ô∏è Avis ignor√©: {$e->getMessage()}\n\n";
        }
    }

    // Cr√©er aussi quelques avis de passagers vers conducteurs (invers√©s)
    foreach ($trips as $index => $trip) {
        if ($inserted >= 15) break;

        // Le conducteur √©value un passager
        $passager = $users[($index + 2) % count($users)]; // S√©lectionner un autre utilisateur

        if ($passager['utilisateur_id'] == $trip['conducteur_id']) {
            continue;
        }

        // V√©rifier si l'avis n'existe pas
        $stmt = $pdo->prepare("
            SELECT COUNT(*) FROM avis
            WHERE evaluateur_id = :eval AND evalue_id = :evalu AND covoiturage_id = :trip
        ");
        $stmt->execute([
            'eval' => $trip['conducteur_id'],
            'evalu' => $passager['utilisateur_id'],
            'trip' => $trip['covoiturage_id']
        ]);

        if ($stmt->fetchColumn() > 0) {
            continue;
        }

        $comment = $commentaires[array_rand($commentaires)];
        $note = $comment[0];
        $commentaire = str_replace('Conducteur', 'Passager', $comment[1]);

        $daysAgo = rand(1, 30);
        $created_at = date('Y-m-d H:i:s', strtotime("-$daysAgo days"));

        try {
            $stmt = $pdo->prepare("
                INSERT INTO avis (evaluateur_id, evalue_id, covoiturage_id, note, commentaire, created_at)
                VALUES (:evaluateur, :evalue, :covoiturage, :note, :commentaire, :created_at)
            ");
            $stmt->execute([
                'evaluateur' => $trip['conducteur_id'],
                'evalue' => $passager['utilisateur_id'],
                'covoiturage' => $trip['covoiturage_id'],
                'note' => $note,
                'commentaire' => $commentaire,
                'created_at' => $created_at
            ]);

            $inserted++;
            echo "‚úÖ Avis #{$inserted}: Conducteur ‚Üí {$passager['pseudo']} (Note: {$note}/5)\n";
            echo "   Trajet: {$trip['ville_depart']} ‚Üí {$trip['ville_arrivee']}\n";
            echo "   \"{$commentaire}\"\n\n";

        } catch (PDOException $e) {
            // Ignorer silencieusement
        }
    }

    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n";
    echo "<span class='success'>üéâ CR√âATION TERMIN√âE</span>\n";
    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n";

    echo "‚úÖ Avis cr√©√©s: <span class='success'>$inserted</span>\n";
    echo "‚ö†Ô∏è Avis ignor√©s: $skipped\n\n";

    // Statistiques finales
    $stmt = $pdo->query("SELECT COUNT(*) FROM avis");
    $totalAvis = $stmt->fetchColumn();

    $stmt = $pdo->query("SELECT AVG(note) FROM avis");
    $avgNote = round($stmt->fetchColumn(), 1);

    echo "üìä STATISTIQUES GLOBALES:\n";
    echo "   Total d'avis: $totalAvis\n";
    echo "   Note moyenne: $avgNote / 5\n\n";

    echo "‚úÖ Vous pouvez maintenant tester l'affichage des avis !\n";

} catch (Exception $e) {
    echo "<span class='error'>‚ùå ERREUR: " . $e->getMessage() . "</span>\n\n";
    echo "Trace:\n" . $e->getTraceAsString();
}

echo "</pre>";

echo "<hr>";
echo "<h2>üìç Prochaines √©tapes</h2>";
echo "<p><strong>Les avis de d√©monstration sont pr√™ts !</strong></p>";
echo "<p><a href='/user/dashboard.php?section=avis' style='display: inline-block; background: #27ae60; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;'>üéâ Voir les avis</a></p>";
echo "<p><a href='/'>‚Üê Retour accueil</a></p>";
?>
